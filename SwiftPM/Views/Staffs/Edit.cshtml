@model SwiftPMModel.Staff

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


<div class="content-page">
    <!-- Start content -->
    <div class="content">
        <div class="container-fluid">
            <!-- Page-Title -->
            <div class="row">
                <div class="col-sm-12">
                    <div class="page-title-box">
                        <h4 class="page-title">Profile Editing </h4>
                        <ol class="breadcrumb float-right">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item"><a href="#">Staffs</a></li>
                            <li class="breadcrumb-item active">Create Staff</li>
                        </ol>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="card-box">
                        <h4 class="header-title m-t-0">Staff Form</h4>
                        <p class="text-muted font-14 m-b-20">
                            Bio-data Editing .
                        </p>
                        <form action="@Url.Action("Edit","Staffs")" method="post">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary()


                            <div class="form-group">
                                <label for="userName">Title<span class="text-danger">*</span></label>

                                @Html.EnumDropDownListFor(m => m.TitleList, new { @class = "form-control", placeholder = "Select_Title", id = "TitleList" })

                                @Html.ValidationMessageFor(m => m.TitleList, null, new { @class = "text-danger" })

                                @Html.HiddenFor(m => m.Title)

                            </div>


                            <div class="form-group">
                                <label for="userName">First Name<span class="text-danger">*</span></label>

                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "Enter First name", id = "userName" })

                                @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger" })
                                @*<input type="text" name="nick" parsley-trigger="change" required
                                    placeholder="Enter user name" class="form-control" id="userName">*@
                            </div>
                            <div class="form-group">
                                <label for="emailAddress">Last Name<span class="text-danger">*</span></label>

                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Enter Email Address", id = "emailAddress" })

                                @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="userName">Marital Status<span class="text-danger">*</span></label>

                                @Html.EnumDropDownListFor(m => m.MaritalStatusList, new { @class = "form-control", placeholder = "Select Marital Status", id = "MaritalStatusList" })

                                @Html.ValidationMessageFor(m => m.MaritalStatusList, null, new { @class = "text-danger" })

                                @Html.HiddenFor(m => m.MaritalStatus)
                            </div>

                            <div class="form-group">
                                <label for="pass1">Gender <span class="text-danger">*</span></label>
                                @*<input id="pass1" type="password" placeholder="Password" required
                                    class="form-control">*@

                                @Html.EnumDropDownListFor(m => m.GenderList, new { @class = "form-control", placeholder = "Enter First name", id = "GenderList" })

                                @Html.ValidationMessageFor(m => m.GenderList, null, new { @class = "text-       danger" })

                                @Html.HiddenFor(m => m.Gender)
                            </div>

                            <div class="form-group">
                                <label for="passWord2">Phone Number <span class="text-danger">*</span></label>
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "input Phone Number", id = "PhoneNumber" })

                                @Html.ValidationMessageFor(m => m.PhoneNumber, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group text-right m-b-0">
                                <button class="btn btn-primary waves-effect waves-light" type="submit">
                                    Submit
                                </button>
                                <button type="reset" class="btn btn-secondary waves-effect m-l-5">
                                    Cancel
                                </button>
                            </div>
                        </form>

                        <!--End of Staff Creation Form-->
                    </div> <!-- end card-box -->
                </div>

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
